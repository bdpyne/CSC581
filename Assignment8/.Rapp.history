model <- svm( iris$Species~., iris )
res <- predict( model, newdata=iris )
res
cm      <- table(iris$Species, res)
cm
err     <- (cm[1, 2] + cm[2, 1] / length(res) * 100)
err
source("prog.r")
run.builtin()
source("prog.r")
run(5)
source("prog.r")
run(5)
run(10)
source("prog.r")
run(10)
run(5)
source("prog.r")
run(5)
x <- 1:20
x
y <- sample(x)
y
x <- 1:75
y <- sample(x)
y
y <- sample(x)
y
source("prog.r")
run()
source("prog.r")
run()
source("prog.r")
run()
source("prog.r")
run()
source("prog.r")
run()
source("prog.r")
run()
source("prog.r")
run()
source("prog.r")
run()
source("prog.r")
run()
source("prog.r")
run()
source("prog.r")
run()
source("prog.r")
run()
source("prog.r")
run()
source("prog.r")
run()
source("prog.r")
run()
source("prog.r")
run()
source("prog.r")
run()
ds
ds[,-ncol(ds)]
ds[,ncol(ds)]
source("prog.r")
run(5)
source("prog.r")
run(5)
source("prog.r")
run(5)
source("prog.r")
run(5)
source("prog.r")
run(5)
source("prog.r")
run(5)
source("prog.r")
run(5)
source("prog.r")
run(5)
source("prog.r")
run(5)
library(neuralnet)
source("prog.r")
iris.df
net
net <- neuralnet(Species.numeric ~ Sepal.Width+Sepal.Length+Petal.Width+Petal.Length,iris.df,hidden=10)
net <- neuralnet(Species.numeric ~ Sepal.Width+Sepal.Length+Petal.Width+Petal.Length,iris.df,hidden=1)
net
net <- neuralnet(Species.numeric ~ Sepal.Width+Sepal.Length+Petal.Width+Petal.Length,iris.df,hidden=4)
net
net <- neuralnet(Species.numeric ~ Sepal.Width+Sepal.Length+Petal.Width+Petal.Length,iris.df,hidden=6)
net <- neuralnet(Species.numeric ~ Sepal.Width+Sepal.Length+Petal.Width+Petal.Length,iris.df,hidden=5)
net
help neuralnet
iris
apply(iris, 2, function(x) sum(is.na(x)))
data <- iris
data
index <- sample(1:nrow(data),round(0.75*nrow(data)))
train <- data[index,]
test <- data[-index,]
lm.fit <- glm(medv~., data=train)
lm.fit <- glm(Species~., data=train)
source("prog.r")
iris.df
source("prog.r")
train
test
source("prog.r")
nn
net
source("prog.r")
net
source("prog.r")
net
sample(iris.df, size=50)
sample(iris.df, size=50, replace=TRUE)
sample(c(iris.df[1:ncol(iris.df), ]))
sample(c(iris.df[1:ncol(iris.df), ]), size=50)
sample(c(iris.df[1:ncol(iris.df), ]), size=50, replace=TRUE)
iris.df[sample(1:nrow(iris.df), 50, replace=FALSE), ]
source("prog.r")
net
source("prog.r")
train.net
test.net
train.net
source("prog.r")
train.net
test.net
source("prog.r")
run.nn("Train", 2)
source("prog.r")
run.nn(train, 5)
source("prog.r")
run.nn(train, 5)
source("prog.r")
run.nn(train, 5)
source("prog.r")
run.nn(train, 5)
source("prog.r")
run.nn(train, 5)
source("prog.r")
run.nn(train, 5)
source("prog.r")
run.nn(train, 5)
source("prog.r")
run.nn(train, 5)
source("prog.r")
run.nn(train, 5)
source("prog.r")
run.nn(train, 5)
source("prog.r")
run.nn(iris.df, 5)
source("prog.r")
run.nn(iris.df, 5)
source("prog.r")
run()
source("prog.r")
run(5)
source("test.r")
net
predict <- fitted(nn)
predict <- fitted(net)
cm <- table(iris.df$Species, predict)
source("prog.r")
run(4)
source("prog.r")
run(4)
source("prog.r")
run(4)
source("prog.r")
run(4)
source("prog.r")
run(4)
source("prog.r")
run(4)
source("prog.r")
run(4)
source("prog.r")
run(4)
source("prog.r")
run(4)
source("prog.r")
model <- run(4)
model
print(model)
model$model.result[[1]]
source("test.r")
source("prog.r")
run(1)
run(2)
run(3)
run(4)
source("prog.r")
run(4)
run.train.test(4)
source("prog.r")
run.train.test(4)
nrow(iris)
source("prog.r")
run.train.test(4)
source("prog.r")
run.train.test(4)
source("prog.r")
run.train.test(4)
source("prog.r")
run.train.test(4)
source("prog.r")
run()
source("prog.r")
run()
source("prog.r")
